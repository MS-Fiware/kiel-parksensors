# WARNING: Do not deploy this tutorial configuration directly to a production environment
#
# The tutorial docker-compose files have not been written for production deployment and will not 
# scale. A proper architecture has been sacrificed to keep the narrative focused on the learning 
# goals, they are just used to deploy everything onto a single Docker machine. All FIWARE components 
# are running at full debug and extra ports have been exposed to allow for direct calls to services. 
# They also contain various obvious security flaws - passwords in plain text, no load balancing,
# no use of HTTPS and so on. 
# 
# This is all to avoid the need of multiple machines, generating certificates, encrypting secrets
# and so on, purely so that a single docker-compose file can be read as an example to build on, 
# not use directly. 
# 
# When deploying to a production environment, please looking at the SmartSDK Recipes
# in order to scale up to a proper architecture:
# 
# see: https://smartsdk.github.io/smartsdk-recipes/
#
version: "3.5"
services:
  # Context broker (v2)
  orion-v2:
    image: fiware/orion:2.2.0
    hostname: orion-v2
    container_name: fiware-orion-v2
    depends_on:
      - mongo-db-v2
    networks:
      - default
    ports:
      - "1026:1026"
    command: -dbhost mongo-db-v2 -logLevel DEBUG -noCache
    healthcheck:
      test: curl --fail -s http://orion-v2:1026/version || exit 1

  # Context broker (LD)
  orion-ld:
    image: fiware/orion-ld
    hostname: orion-ld
    container_name: fiware-orion-ld
    depends_on:
      - mongo-db-ld
    networks:
      - default
    ports:
      - "1027:1026"
    command: -dbhost mongo-db-ld -logLevel DEBUG
    healthcheck:
      test: curl --fail -s http://orion-ld:1026/version || exit 1

  # Database (v2)
  mongo-db-v2:
    image: mongo:3.6
    hostname: mongo-db-v2
    container_name: db-mongo-v2
    expose:
      - "27017"
    ports:
      - "27017:27017"
    networks:
      - default
    command: --nojournal
    volumes:
      - mongo-db-v2:/data

  # Database (LD)
  mongo-db-ld:
    image: mongo:3.6
    hostname: mongo-db-ld
    container_name: db-mongo-ld
    expose:
      - "27018"
    ports:
      - "27018:27017"
    networks:
      - default
    command: --nojournal
    volumes:
      - mongo-db-ld:/data

  # Kiel Parksensors Node.Js App
  kiel-parksensors:
    image: kiel-parksensors-node
    hostname: kiel-parksensors
    container_name: kiel-parksensors-node
    build: ./app
    networks:
      - default
    volumes:
      - ./app:/home/nodejs/kiel-parksensors
      - kiel-parksensors_node_modules:/home/nodejs/kiel-parksensors/node_modules

networks:
  default:
    ipam:
      config:
        - subnet: 172.18.1.0/24

volumes:
  mongo-db-v2: ~
  mongo-db-ld: ~
  kiel-parksensors_node_modules: ~
